#pragma once


#include "stdafx.h"
#include <vector>
#include <math.h>
#include "AVCalls.h"
#include "PDCalls.h"
#include "ASCalls.h"
#include "PEWCalls.h"
#include "PagePDECntCalls.h"
#include "PERCalls.h"

using namespace std;

//=============================================================================
// Определения типов, связанных с раскладкой страниц на пластину
//=============================================================================
// Ориентация страницы
typedef enum {LANDSCAPE, PORTRAIT} MEDIA_ORIENTATION;
// Позиция поля сшивки
typedef enum {LEFT, RIGHT} BINDING_MARGINE_POSITION;
// Технология сгиба
typedef enum {BRITISH, GERMAN} FOLDING_TYPE; 
// Тип сшивки
typedef enum {SADDLE_STITCHED, PERFECT_BOUND, STACKED} BINDING_TYPE; 
// Двусторонняя печать
typedef enum {STANDARD, WORK_TURN, WORK_TUMBLE, SINGLE_SIDED, SINGLE_SIDED_CARD} PRINTING_TYPE;
// Сторона пластины
typedef enum {FRONT, BACK, SINGLE} PLATE_SIDE;
// Режим предварительного просмотра
typedef enum {FIRST, NEXT, PREV, LAST} PREVIEW_PAGE;

typedef struct 
{
	int m_TPos;							 // Позиция шаблона
	int m_PTNum;						 // Номер страницы образцовый
	int m_PRNum;                         // Номер страницы реальный
	PDRotate m_POrt;					 // Ориентация страницы
	ASFixedRect m_MBox;                  // Медиабокс для размещения страницы (зависит от размера листа печати) 
	ASFixed m_Creep;                     // Сдвиг страницы (со знаком. - сдиг влево + сдвиг вправо)

}
PLACEHOLDER;
//======================================================================
// Расчет крип производится менедджером спуска полос. По результатам расчета 
// заполняются структуры PLACEHOLDER в массиве JDS. Генератор ПДФ над этим
// вопросом специально не задумывается - просто для каждой страницы применяет
// крип при создании файла
//=======================================================================
// Шаблон представления одной полуматрицы спуска полос
typedef vector<PLACEHOLDER> A_MATRIX;
typedef vector<A_MATRIX*> M_MATRIX;
// Шаблон полной матрицы спуска полос
typedef M_MATRIX T_MATRIX;
// Структура для хранения задания на спуск полос для генератора ПДФ
typedef struct 
{
	int m_Rows;							// Число строк в матрице шаблона
	int m_Cols;							// Число столбцов в матрице шаблона
	int m_NPlates;						// Количество пластин в задании
	int m_White;                        // Количество пустых страниц в файле
	vector<T_MATRIX> m_Templates;       // Массив шаблонов
}
JDS;

//=============================================================================
// Определения типов, связанных с генерированием ПДФ-файла
//=============================================================================
// Представление формата листа
typedef struct  
{
	double H;
	double W;
}
FORMAT;
// Режимы работы - с сохранением пропорций страниц, с максимальным использованием площади листа, ручной режим
/*
	ОПИСАНИЕ РЕЖИМОВ РАБОТЫ ГЕНЕРАТОРА
	А	- фиксированный размер пластины, подбор схемы, фиксированный масштаб 100%
	В	- фиксированный размер пластины, фиксированная схема, подбор масштаба страницы с сохранением пропорций
	С	- фиксированный масштаб страницы (100% по умолчанию с коррекцией), фиксированная схема, подбор размера пластины
*/
typedef enum {A, B, C} OPERATION_MODE;
// Тип вычислений при построении матриц преобразования
typedef enum {INCH, MM} MEASURING_UNIT_TYPE;
// Тип метки
typedef enum {CROP_FOLD_MARK, REGISTRATION_MARK, GRADIENT_TINT_BAR, PANTONE_COLOR_BAR, PROGRESSIVE_COLOR_BAR_GRAY} TECH_MARK_TYPE;
// Представление типа и позиии технологической метки
typedef struct   
{
	bool m_MarkIsActive;					// Признак активности метки (означает печатается ли она на пластину)
	TECH_MARK_TYPE m_TMType;				// Тип обслуживаемой метки
	// Все что касается меток сгиба-разреза
	ASFixed m_TM_VLen;						// Длина вертикальной линии для меток CROP и FOLD
	ASFixed m_TM_HLen;						// Длина горизонтальной линии для них же
	ASFixed m_TM_VPageGAP;					// Вертикальный отступ от поля страницы для них же
	ASFixed m_TM_HPageGAP;					// Горизонтальный отступ от поля страницы для них же
	// Все, что касается регистрационных меток
	ASFixed m_TM_InnerCircleD;				// Диаметр внутреннего круга метки
	ASFixed m_TM_OuterCircleD;				// Диаметр внешнего круга
	ASFixed m_TM_CrosshairLen;				// Длина линий перекрестья метки
	// Все, что касается таблиц цветоделения
	//==============================================================================================
	// КРАТКОЕ ОПИСАНИЕ ПОРЯДКА РАБОТЫ С ТЕХНОЛОГИЧЕСКИМИ МЕТКАМИ
	//==============================================================================================
	/*
	Метки сгиба-разреза ставяткся в фиксированных позициях, для каждой страницы и их размер и
	положение жестко определены типом раскладки страниц на пластине.
	Аналогичным образом расположены регистрационные метки - они располагаются по четыре на
	пластину, по центру технологического поля каждой стороны пластины. Поэтому при их описании не
	задаются координаты места положения.
	Иначе дело обстоит с таблицами цветоделения. Их размер и местоположение задаются пользова-
	телем при настройке вида пластины (он имеет возможность изменить значения, заданные по умолча-
	нию). При их описании, таким образом, используются координаты места - отступ от поля страницы,
	координаты верхнего левого угла таблицы и ориентация таблицы (pdRotate0 - горизонтальная и
	pdRotate90 - вертикальная). Задается так же размер квадрата, который должен быть меньше ширины 
	технологической области + отступ таблицы от поля страницы. Вкаждой таблице 10 квадратов.
	*/
	//==============================================================================================
	ASFixed m_TM_SquareSize;				// Сторона одного квадрата таблицы
	ASFixed m_TM_PageGAP;					// Отступ от поля страницы для таблиц цветоделения и регистрационных меток
	ASFixed m_TM_Origin_X;					// Абсцисса точки привязки таблицы или центра регистрационной метки
	ASFixed m_TM_Origin_Y;					// Ордината точки привязки таблицы или центра регистрационной метки
	//==============================================================================================
	// Ориентация таблицы (вертикально-горизонтально) или метки сгиба разреза. Углы соответствующие
	// местоположению метки:
	// pdRotate0	- верхний левый угол страницы
	// pdRotate90	- нижний левый угол страницы
	// pdRotate180	- нижний правый угол страницы
	// pdRotate270	- верхний правый угол страницы
	//==============================================================================================
	PDRotate m_TM_Orientation;				 

}
TECH_MARK_SPEC;
